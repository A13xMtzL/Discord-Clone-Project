datasource db {
  provider     = "mysql" //
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Profile {
  id       String @id @default(uuid()) 
  userId   String @unique 
  name     String 
  imageUrl String @db.Text 
  email    String @db.Text 

  // Relaciones
  servers  Server[] // Un perfil puede tener muchos servidores
  members  Member[] // Un perfil puede tener muchos miembros
  channels Channel[] // Un perfil puede tener muchos canales

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Server {
  id         String @id @default(uuid())
  name       String
  imageUrl   String @db.Text
  inviteCode String @db.Text

  // Relaci√≥n con el perfil
  profileId String // ID del perfil asociado
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade) // Referencia al perfil asociado

  // Relaciones
  members  Member[] // Un servidor puede tener muchos miembros
  channels Channel[] // Un servidor puede tener muchos canales

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Member {
  id   String     @id @default(uuid())
  role MemberRole @default(GUEST)

  // Relaciones con el perfil y el servidor
  profileId String // ID del perfil asociado
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade) // Referencia al perfil asociado
  serverId  String // ID del servidor asociado
  server    Server  @relation(fields: [serverId], references: [id], onDelete: Cascade) // Referencia al servidor asociado

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverId])
}

enum ChannelType {
  TEXT
  AUDIO
  VIDEO
}

// Modelo para el canal
model Channel {
  id   String      @id @default(uuid())
  name String
  type ChannelType @default(TEXT)

  // Relaciones con el perfil y el servidor
  profileId String // ID del perfil asociado
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade) // Referencia al perfil asociado
  serverId  String // ID del servidor asociado
  server    Server  @relation(fields: [serverId], references: [id], onDelete: Cascade) // Referencia al servidor asociado

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([serverId])
  @@index([profileId])
}
